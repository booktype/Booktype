How to migrate to Booktype 1.5.3
--------------------------------

1. Update your project settings.py file to use messaging framework. You have to:
    - Add new options

       MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage' 
       TEMPLATE_CONTEXT_PROCESSORS = ('django.contrib.auth.context_processors.auth', 
                                      'django.contrib.messages.context_processors.messages') 

    - Add new messaging middleware to the list:
       MIDDLEWARE_CLASSES = (...,
                             'django.contrib.messages.middleware.MessageMiddleware',
                             ...)

    - Add new Django app to the list:
       INSTALLED_APPS = (...,
                         'django.contrib.messages', 
                         ...)

    Notice: All of these changes will require "django-admin migrate" at the end.

2. Upgrade your config files to include Control Center
    - Upgrade settings.py file with:
      INSTALLED_APPS = (...,
                        'booktypecontrol'
                        ,...)


    - Add to the end of settings.py file

      from booki.utils import config

      try:
        BOOKTYPE_CONFIG = config.loadConfiguration()
      except config.ConfigurationError:
        BOOKTYPE_CONFIG = {}

    - Template file lib/booki/portal/templates/base.html has been modified. 

    Notice: All of these changes will require "django-admin migrate" at the end.

3. Style of database configuration has been changed so please update your configuration. This is a normal 
   Django database configuration and please check Django documentation for more information and options.

   It used to be:
     DATABASE_ENGINE = 'postgresql_psycopg2'
     DATABASE_NAME = '' 
     DATABASE_USER = '' 
     DATABASE_PASSWORD = '' 
     DATABASE_HOST = 'localhost'
     DATABASE_PORT = ''

   Now it is:
     DATABASES = {'default': {'ENGINE': 'django.db.backends.postgresql_psycopg2', 
     	                      'NAME': '', 
                              'USER': '', 
                              'PASSWORD': '', 
                              'HOST': 'localhost', 
                              'PORT': '' 
                              } 
                   } 

4. New configuration for load Django templates. Please change your configuration:

    import django

    if django.VERSION[1] < 3:
        TEMPLATE_LOADERS = (
                            'django.template.loaders.filesystem.load_template_source',
                            'django.template.loaders.app_directories.load_template_source',
                            'django.template.loaders.eggs.load_template_source',
                           )
    else:
        TEMPLATE_LOADERS = (
                            'django.template.loaders.filesystem.Loader',
                            'django.template.loaders.app_directories.Loader',
                            'django.template.loaders.eggs.Loader',
                           )
    


How to migrate to Booktype 1.5.2
--------------------------------

1. Update your project settings.py. You have to add new middleware called "LocaleMiddleware" to the list.

    MIDDLEWARE_CLASSES = (
        'django.middleware.common.CommonMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.locale.LocaleMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.middleware.transaction.TransactionMiddleware'
    )

2. Update your project settings.py. You don't have to but you can comment LANGUAGES options.

    LANGUAGE_CODE = 'en-us'

    # Uncomment this if you want to limit language translations only to specific list of languages
    #
    # gettext = lambda s: s
    #
    # LANGUAGES = (
    #  ('en-us', gettext('English'))
    # )

3. By default "createbooki" script will now create "locale" directory in your Booktype project.

4. Update you project settings.py

   LOCALE_PATHS = (
         '%s/locale' % os.path.dirname(booki.__file__),
   )


How to migrate to latest Booki 1.4
----------------------------------

1. The following should be added to settings.py:

# lulu.com export credentials that override Objavi settings
LULU_USER = None
LULU_PASSWORD = None
LULU_API_KEY = None

2. Templates have been changed. If you have modified template "editor/edit_book.html" you will
   have to modify it again. Please be careful about this part of template:

       <ul class="bookStatuses template">
         {% for s0, s1 in statuses %}
           <li id="{{s0}}">{% trans s1 %}</li>
         {% endfor %}
       </ul>

   Some part of template have been separated into:
       editor/edit_strings.html
       editor/edit_init.html


How to migrate to Booki 1.2
---------------------------

1. There are new template files. Be aware if you have changed template files.

   reader/book_info.html       (new file)

   reader/book_view.html       (used to be reader/book.html)
   reader/book_chapter.html    (used to be reader/chapter.html)

   reader/draft_book.html      (used to be reader/book.html)
   reader/draft_chapter.html   (used to be reader/chapter.html)

2. There are new named URL patterns.

   book_view         (used to be view_book, does not have book version argument anymore)
   book_chapter      (used to be view_chapter, does not have book version argument anymore)

   book_info         (new)
 
   draft_book        (used to be view_book)
   draft_chapter     (used to be view_chapter)
   draft_attachment

   For instance. If you had in your template:
    
       {% url view_chapter  book.url_title book_version chap.url_title %}

   Now you must use this syntax (notice there is no book version argument):

       {% url book_chapter  book.url_title  chap.url_title %}

3. You must add new default template directory to settings.py file. This is how TEMPLATE_DIR should look like:

   TEMPLATE_DIRS = (
      '%s/templates/' % BOOKI_ROOT,
      '%s/templates/' % os.path.dirname(booki.__file__)
   )

4. Read lib/booki/messaging/README.txt how to install new Messaging app.

   

How to migrate to Booki 1.1
---------------------------

1. Install Booki again with 'createbooki' script

2. Change configuration in new setting.py file (compare it with old configuration)

3. Change attachment path in database. Please change OLD_PATH and NEW_PATH to point to new directories. If you don't do this, attachments will not be accessable.

   $ django-admin shell
   >>> from booki.editor import models
   >>> OLD_PATH = '/Users/aerkalov/Work/git/booki/site_media/static/'
   >>> NEW_PATH = '/Users/aerkalov/Work/git/mybooki/data/books/'
   >>>
   >>> for att in models.Attachment.objects.all():
   ...     print '>> ', att.attachment.name
   ...     name = att.attachment.name.replace(OLD_PATH, NEW_PATH)
   ...     att.attachment.name = name
   ...     att.save()
   >>>
   >>> from django.contrib.auth.models import User
   >>> OLD_PATH = '/Users/aerkalov/Work/git/booki/site_media/static/_profile_images/'
   >>> NEW_PATH = '/Users/aerkalov/Work/git/mybooki/data/profile_images/'
   >>>
   >>> for u in User.objects.all():
   ...     p = u.get_profile()
   ...     print '>>> ', p.image.name
   ...     name = p.image.name.replace(OLD_PATH, NEW_PATH)
   ...     p.image.name = name
   ...     p.save()

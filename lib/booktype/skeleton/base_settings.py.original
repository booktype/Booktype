# -*- coding: utf-8 -*-

import os

from unipath import Path

import djcelery

djcelery.setup_loader()

# DJANGO ADMIN
ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)

MANAGERS = ADMINS

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
ALLOWED_HOSTS = ['*']

DEFAULT_NOTIFICATION_FILTER=u"#* !* ~* \u212c*"

# You can customize which publish options this installation can use.
# Options are: book, ebook, pdf, lulu, odt
# PUBLISH_OPTIONS = ("book", "ebook")

# BOOKTYPE
PROFILE_ACTIVE = ''

BOOKTYPE_SITE_NAME = None
# This is how you can define name of your site
# BOOKTYPE_SITE_NAME = '##BOOKTYPE_SITE_NAME##'
BOOKTYPE_SITE_DIR = '##BOOKTYPE_SITE_DIR##'

THIS_BOOKTYPE_SERVER = '' # the name of the booki server (comment out to use os.environ['HTTP_HOST'])

#BOOKTYPE_ROOT = '##BOOKTYPE_ROOT##' 
BOOKTYPE_ROOT = Path(os.path.abspath(__file__)).ancestor(3)

BOOKTYPE_URL = ''
#BOOKTYPE_URL = 'http://{}'.format(THIS_BOOKTYPE_SERVER)

# E-MAIL OPTIONS
REPORT_EMAIL_USER = 'booktype@booktype.pro'

EMAIL_HOST = 'localhost'
EMAIL_PORT = 25
#EMAIL_HOST_USER = 'booktype@' + THIS_BOOKTYPE_SERVER
#EMAIL_HOST_PASSWORD = ''
#EMAIL_USE_TLS = False

# BOOKTYPE DIRECTORIES

# site_static
import booki

# static
STATIC_ROOT = BOOKTYPE_ROOT.child('static')
STATIC_URL  = '{}/static/'.format(BOOKTYPE_URL)

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    BOOKTYPE_ROOT.child(BOOKTYPE_SITE_DIR).child('static'),
)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
    'compressor.finders.CompressorFinder'
)

# data
DATA_ROOT = BOOKTYPE_ROOT.child('data')
DATA_URL  = '{}/data/'.format(BOOKTYPE_URL)

# profile images
PROFILE_IMAGE_UPLOAD_DIR = 'profile_images/' 

# If you don't want to use default profile image you can set your own.
# Place the image inside of /static/images/ directory in your Booktype project directory.
#DEFAULT_PROFILE_IMAGE='anonymous.png'

# book cover images			 
COVER_IMAGE_UPLOAD_DIR = 'cover_images/'

# group images          
GROUP_IMAGE_UPLOAD_DIR = 'group_images/'


# obsolete
MEDIA_ROOT = DATA_ROOT
MEDIA_URL = DATA_URL

ADMIN_MEDIA_PREFIX = '{}/media/'.format(BOOKTYPE_URL)

# who gets credited as publisher if not otherwise specified
DEFAULT_PUBLISHER = "Unknown"



# REDIS STUFF
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0
REDIS_PASSWORD = None

# DJANGO STUFF

AUTH_PROFILE_MODULE='account.UserProfile'

TIME_ZONE = 'Europe/Berlin'

LANGUAGE_CODE = 'en-us'

gettext = lambda s: s

LANGUAGES = (
 ('en', gettext('English')),
 ('es', gettext('Español')),
 ('fr', gettext('Italiano')),
 ('pt', gettext('Português')),
 ('pt', gettext('Português')),
 ('ru', gettext('Русский')),
 ('sq', gettext('Shqip')),
)

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
USE_TZ = False

LOCALE_PATHS = (
     BOOKTYPE_ROOT.child(BOOKTYPE_SITE_DIR).child('locale'),
      Path(booki.__file__).parent.child('locale'),
      Path(booki.__file__).parent.child('booktype').child('locale')
)

# Make this unique, and don't share it with anybody.
SECRET_KEY = '##SECRET_KEY##'

# Storage for messages framework
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage' 

# List of callables that know how to import templates from various sources.

TEMPLATE_LOADERS = (
                    'django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                    'django.template.loaders.eggs.Loader',
                   )


TEMPLATE_CONTEXT_PROCESSORS = ("django.contrib.auth.context_processors.auth",
                                "django.core.context_processors.debug",
                                "django.core.context_processors.i18n",
                                "django.core.context_processors.media",
                                "django.core.context_processors.static",
                                "django.core.context_processors.tz",
                                "django.core.context_processors.request",
                                "django.contrib.messages.context_processors.messages",
                                "django.core.context_processors.csrf")

MIDDLEWARE_CLASSES = (
                    'django.middleware.common.CommonMiddleware',
                    'django.contrib.sessions.middleware.SessionMiddleware',
                    'django.middleware.csrf.CsrfViewMiddleware',
                    'django.middleware.locale.LocaleMiddleware',
                    'django.contrib.auth.middleware.AuthenticationMiddleware',
                    'django.middleware.transaction.TransactionMiddleware',
                    'django.contrib.messages.middleware.MessageMiddleware'
)


# Python dotted path to the WSGI application used by Django's runserver.
WSGI_APPLICATION = '{}.wsgi.application'.format('##BOOKTYPE_SITE_DIR##')

TEMPLATE_DIRS = (
    BOOKTYPE_ROOT.child(BOOKTYPE_SITE_DIR).child('templates'),
    Path(booki.__file__).parent.child('templates')
)


INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.admin',
    'django.contrib.messages', 
    'django.contrib.staticfiles',

    'south',
    'compressor',
    'djcelery',

    # list of booki apps
    'booki.editor',

    # list of booktype apps
    'booktype.apps.core',
    'booktype.apps.portal',
    'booktype.apps.loadsave',
    'booktype.apps.importer',    
    'booktype.apps.convert',
    'booktype.apps.edit',
    'booktype.apps.reader',
    'booktype.apps.account',

    # to be removed
    'booki.messaging',

    'sputnik',
    'booktypecontrol'
)

BOOKTYPE_CONVERTER_MODULES = (
    'booktype.convert.converters',
)

BROKER_URL = 'amqp://guest:guest@localhost:5672/'
CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

# DEPRECATED CONFIG

BOOKTYPE_NAME = BOOKTYPE_SITE_NAME
BOOKI_NAME = BOOKTYPE_NAME
BOOKI_ROOT = BOOKTYPE_ROOT
BOOKI_URL = BOOKTYPE_URL
THIS_BOOKI_SERVER = THIS_BOOKTYPE_SERVER
BOOKI_MAINTENANCE_MODE = False

